

## For a live site, handling more connections, uncomment, then start WinNMP.exe --phpCgiServers=25:
worker_processes 8;
worker_rlimit_nofile 32384;


events {   
	## For a live site, uncomment:
	worker_connections 8096;
	multi_accept on;
}

http {

    server_tokens		off;
	sendfile		on;
	tcp_nopush		on;
	tcp_nodelay		on;
	ssi			off;
	server_names_hash_bucket_size  64;


	## Timeouts ##
	##############

	client_body_timeout	5;
	client_header_timeout	5;
	keepalive_timeout	65;
	send_timeout		15s;
	resolver_timeout	3s;

	# Timeout period for connection with FastCGI-server. It should be noted that this value can't exceed 75 seconds. 
	fastcgi_connect_timeout 25s;

	# Amount of time for upstream to wait for a fastcgi process to send data. 
	# Change this directive if you have long running fastcgi processes that do not produce output until they have finished processing. 
	# If you are seeing an upstream timed out error in the error log, then increase this parameter to something more appropriate. 
	fastcgi_read_timeout	40s;

	# Request timeout to the server. The timeout is calculated between two write operations, not for the whole request. 
	# If no data have been written during this period then serve closes the connection.
	fastcgi_send_timeout	15s;


	## Buffers ##
	#############

	fastcgi_buffers			8 32k;
	fastcgi_buffer_size		32k;
	#fastcgi_busy_buffers_size	256k;
	#fastcgi_temp_file_write_size	256k;

	open_file_cache			off;

	# php max upload limit cannot be larger than this       
	client_max_body_size		33m;	

        ####client_body_buffer_size	1K;
        client_header_buffer_size	1k;
        large_client_header_buffers	2 1k;	
	types_hash_max_size		2048;




	include nginx.mimetypes.conf;
	default_type text/html;




	## Logging ##
	#############

	access_log	"c:/winnmp/log/nginx_access.log";
	error_log	"c:/winnmp/log/nginx_error.log" warn;	#debug or warn
	log_not_found	on;	#enables or disables messages in error_log about files not found on disk. 
	rewrite_log	off;

	fastcgi_intercept_errors off;	# Do Not Change (off) !


	gzip on;
	gzip_proxied any;
    gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

	index  index.php index.htm index.html;
	
	upstream movies-api {
		server 127.0.0.1:9081;
		server 127.0.0.1:9082;
	}

	server {


		# NEVER ALLOW PUBLIC ACCESS TO THIS SERVER !!!
		# Instead, create projects using WinNMP.exe, and allow public access only to those projects!
		# How to allow access from LAN and Internet to your local project:
		# http://WinNMP.wtriple.com/howtos.php#How-to-allow-access-from-LAN-and-Internet-to-your-local-project

		listen		127.0.0.1	default_server;		# Do Not Change ! Security Risk !
		listen 9080;
		#listen		[::1]:80	ipv6only=on;		# Do Not Change ! Security Risk !
		server_name	localhost;				# Do Not Change ! Security Risk !

		# This directive is modified automatically by WinNMP.exe for portability.
		root		"c:/winnmp/www";
		
		allow		127.0.0.1;	# Do Not Change ! Security Risk !
		allow		::1;		# Do Not Change ! Security Risk !
		deny		all;		# Do Not Change ! Security Risk !

		## deny access to .htaccess files, if Apache's document root
		## concurs with nginx's one
		location ~ /\.ht {
			deny  all;
		}


		## Tools are now served from wt-nmp/include/tools/
		location ~ ^/tools/.*\.php$ {					
			root "c:/winnmp/include";
			try_files $uri =404; 
			include		nginx.fastcgi.conf;
			fastcgi_pass	php_farm;
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			deny		all;			# Do Not Change ! Security Risk !
		}
		location ~ ^/tools/ {
			root "c:/winnmp/include";
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			deny		all;			# Do Not Change ! Security Risk !
		}


		## How to add phpMyAdmin 
		## Copy phpMyAdmin files to c:/winnmp/include/phpMyAdmin then uncomment:

		#location ~ ^/phpMyAdmin/.*\.php$ {
		#	root "c:/winnmp/include";
		#	try_files $uri =404; 
		#	include         nginx.fastcgi.conf;
		#	fastcgi_pass    php_farm;
		#	allow           127.0.0.1;  
		#	allow           ::1;
		#	deny            all;
		#}       
		#location ~ ^/phpMyAdmin/ {
		#	root "c:/winnmp/include";
		#}

		## Notice that the root directive lacks /phpMyAdmin because Nginx adds the URL path /phpMyAdmin to the root path, so the resulting directory is c:/winnmp/include/phpMyAdmin
		

		## PHP for localhost ##
		#######################

		location ~ \.php$ {
			try_files $uri =404; 
			include		nginx.fastcgi.conf;
			include		nginx.redis.conf;
			fastcgi_pass	php_farm;
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			deny		all;			# Do Not Change ! Security Risk !
	    }

		# How to allow access from LAN and Internet to your local project:
		# http://WinNMP.wtriple.com/howtos.php#How-to-allow-access-from-LAN-and-Internet-to-your-local-project

		location /movietips {
			proxy_buffers  32 4m;
			proxy_busy_buffers_size 25m;
			proxy_buffer_size 512k;
			proxy_max_temp_file_size 0;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			client_max_body_size   1024m;
			client_body_buffer_size 4m;
			proxy_connect_timeout 300;
			proxy_read_timeout 300;
			proxy_send_timeout 300;
			proxy_intercept_errors off;
			proxy_pass http://localhost:3001;
			proxy_redirect off;
		}
		
		location /movietips/static {
			alias "c:/winnmp/www/movietips/client/webapp";
			gzip_static on;
			autoindex on;
		}

		location /movietips/api {
			proxy_pass http://movies-api/rest-api;
		}
		
		location /movietips/api/render {
			proxy_pass  http://localhost:3001/renderDynamic;
		}

		location ~ \.php$ {
			try_files $uri =404;
		}
		
		location @extensionless-php {
			rewrite ^(.*)$ $1.php last;
		}
	}
	
	# server for api microservice #
	server {
		root		"c:/winnmp/www/movietips";
		
		allow		127.0.0.1;	# Do Not Change ! Security Risk !
		allow		::1;		# Do Not Change ! Security Risk !
		deny		all;		# Do Not Change ! Security Risk !

		listen      9081;
		charset     utf-8;
		server_name	localhost;
		
		location ~ /\.ht {
			deny  all;
		}

		location ~ \.php$ {
			try_files $uri =404; 
			include		nginx.fastcgi.conf;
			include		nginx.redis.conf;
			fastcgi_pass	php_farm;
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			deny		all;			# Do Not Change ! Security Risk !
	    }
		
		location / {
			return 200 "Server is up";
		}
		
		location /rest-api {
			try_files $uri $uri.html $uri/ @extensionless-php;
		}
		
		location @extensionless-php {
			rewrite ^(.*)$ $1.php last;
		}
		
		location ~ \.php$ {
			try_files $uri = 404;
		}
		
	 }
	 
	 # server for api microservice #
	server {
		root		"c:/winnmp/www/movietips";
		
		allow		127.0.0.1;	# Do Not Change ! Security Risk !
		allow		::1;		# Do Not Change ! Security Risk !
		deny		all;		# Do Not Change ! Security Risk !

		listen      9082;
		charset     utf-8;
		server_name	localhost;
		
		location ~ /\.ht {
			deny  all;
		}

		location ~ \.php$ {
			try_files $uri =404; 
			include		nginx.fastcgi.conf;
			include		nginx.redis.conf;
			fastcgi_pass	php_farm;
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			deny		all;			# Do Not Change ! Security Risk !
	    }
		
		location / {
			return 200 "Server is up";
		}
		
		location /rest-api {
			try_files $uri $uri.html $uri/ @extensionless-php;
		}
		
		location @extensionless-php {
			rewrite ^(.*)$ $1.php last;
		}
		
		location ~ \.php$ {
			try_files $uri = 404;
		}
		
	 }

		
	include domains.d/*.conf;


	include nginx.phpfarm.conf;

}
